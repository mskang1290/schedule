[{"C:\\git\\schedule\\src\\index.tsx":"1","C:\\git\\schedule\\src\\reportWebVitals.ts":"2","C:\\git\\schedule\\src\\App.tsx":"3","C:\\git\\schedule\\src\\Sample.tsx":"4","C:\\git\\schedule\\src\\Modal.tsx":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":426,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":1016,"mtime":1606356172341,"results":"9","hashOfConfig":"7"},{"size":4737,"mtime":1606356172342,"results":"10","hashOfConfig":"7"},{"size":5934,"mtime":1606356941506,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1k7c35v",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\git\\schedule\\src\\index.tsx",[],["25","26"],"C:\\git\\schedule\\src\\reportWebVitals.ts",[],"C:\\git\\schedule\\src\\App.tsx",["27"],"import React,{useEffect} from \"react\";\r\nimport \"./App.css\";\r\nimport Sample from \"./Sample\";\r\nimport { Event } from \"./Model\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\n\r\nfunction App() {\r\n\r\n  let eventList = [\r\n  ] as Array<Event>;\r\n\r\n  // let flag=false;\r\n  useEffect(() => {\r\n  const f = async () => {\r\n    console.log('side effect!');\r\n    await axios\r\n      .get(\"http://localhost:5000/api/getEvent\")\r\n      .then(({ data }) =>{ \r\n        data.forEach((event: Event)=>{\r\n          event.start=new Date(moment(event.start).format(\"YYYY-MM-DD HH:mm:ss\"))\r\n          event.end=new Date(moment(event.end).format(\"YYYY-MM-DD HH:mm:ss\"))\r\n          event.allDay=false\r\n          Object.assign(eventList, data) //담는거\r\n        })\r\n      }).catch(({reason})=>{\r\n      });\r\n      // flag=true;\r\n    };\r\n    f();\r\n    \r\n  }, []);\r\n\r\n  // if(!flag) return null;\r\n  \r\n  return (\r\n    <div>\r\n        <div className=\"App\">\r\n        <Sample eventList={eventList} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\git\\schedule\\src\\Sample.tsx",["28","29","30","31"],"import React, { useEffect, useState } from \"react\";\r\nimport { Calendar, momentLocalizer, Views } from \"react-big-calendar\";\r\nimport moment from \"moment\";\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\nimport { Event } from \"./Model\";\r\nimport \"./styles/modal.css\";\r\nimport Modal from \"./Modal\";\r\nimport \"./App.css\";\r\nimport axios from \"axios\";\r\n\r\n// 何の機能か分からない\r\nconst localizer = momentLocalizer(moment);\r\n\r\nlet Atest: Views = {\r\n  MONTH: \"month\",\r\n  WEEK: \"week\",\r\n  WORK_WEEK: \"work_week\",\r\n  DAY: \"day\",\r\n  AGENDA: \"agenda\",\r\n};\r\n\r\nconst Sample = ({ eventList }: { eventList: Array<Event> }) => {\r\n  // useEffect(() => {\r\n    // fetch(\"http://localhost:5000/api/getEvent\")\r\n    //   .then(res => res.json())\r\n    //   .then(\r\n    //     (result) => {\r\n    //       console.log(\"data\")\r\n    //       console.log(result)\r\n    //       console.log(\"data\")\r\n    //       result.forEach((event: Event)=>{\r\n    //         // event.start=event.start&&event.start.replace(\"T\", \" \")\r\n    //         // event.end=event.end&&event.end.replace(\"T\", \" \")\r\n    //         // event.start=event.start&&event.start.replace(\"Z\", \"\")\r\n    //         // event.end=event.end&&event.end.replace(\"Z\", \"\")\r\n    //         event.start=new Date(moment(event.start).format(\"YYYY-MM-DD HH:mm\"))\r\n    //         event.end=new Date(moment(event.end).format(\"YYYY-MM-DD HH:mm\"))\r\n    //         event.allDay=false\r\n    //         // eventList=eventList.concat(data)\r\n    //         console.log(event)\r\n    //         Object.assign(eventList, result)\r\n    //     },\r\n    //     // Note: it's important to handle errors here\r\n    //     // instead of a catch() block so that we don't swallow\r\n    //     // exceptions from actual bugs in components.\r\n    //     (error) => {\r\n    //       setIsLoaded(true);\r\n    //       setError(error);\r\n    //     })}\r\n    //   )\r\n  // const f = async () => {\r\n  //   console.log('side effect!');\r\n  //   await axios\r\n  //     .get(\"http://localhost:5000/api/customers\")\r\n  //     .then(({ data }) =>{ \r\n  //       console.log(\"data\")\r\n  //       console.log(data)\r\n  //       console.log(\"data\")\r\n  //       data.forEach((event: Event)=>{\r\n  //         // event.start=event.start&&event.start.replace(\"T\", \" \")\r\n  //         // event.end=event.end&&event.end.replace(\"T\", \" \")\r\n  //         // event.start=event.start&&event.start.replace(\"Z\", \"\")\r\n  //         // event.end=event.end&&event.end.replace(\"Z\", \"\")\r\n  //         event.start=new Date(moment(event.start).format(\"YYYY-MM-DD HH:mm\"))\r\n  //         event.end=new Date(moment(event.end).format(\"YYYY-MM-DD HH:mm\"))\r\n  //         event.allDay=false\r\n  //         // eventList=eventList.concat(data)\r\n  //         console.log(event)\r\n  //         Object.assign(eventList, data)\r\n  //       })\r\n  //       // eventList=data.slice()\r\n  //       console.log(data)\r\n  //       console.log(eventList)\r\n  //     }).catch(({reason})=>{\r\n  //       console.log(reason)\r\n  //     });\r\n  //     // renderFL=true;\r\n  //   };\r\n  //   f();\r\n  // }, []);\r\n  console.log(\"sample\")\r\n  console.log(eventList)\r\n  console.log(\"sample\")\r\n\r\n  const [data, setData]=useState([]);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [showEvent, setShowEvent] = useState(false);\r\n  const [event, setEvent] = useState({\r\n    id: undefined,\r\n    title: \"\",\r\n    start: undefined,\r\n    end: undefined,\r\n    allDay: false,\r\n    resource: \"\",\r\n  } as Event);\r\n  return (\r\n    <>\r\n      <div className=\"App\">\r\n        <Calendar\r\n          localizer={localizer} //????\r\n          events={eventList} //event add\r\n          timeslots={2}\r\n          defaultView={Atest.AGENDA}\r\n          onSelectEvent={(event: Event) => {\r\n            setEvent(event);\r\n            setShowEvent(true);\r\n          }}\r\n          views={['month', 'day', 'agenda']}\r\n          drilldownView=\"agenda\"\r\n          style={{ height: 500 }} //calendarのstyle\r\n          // getNow={test}\r\n          // date={new Date(moment().add(1,\"day\").format())}\r\n          // resources={[{name:\"test1\"},{name:\"test2\"},{name:\"test3\"}]}\r\n          formats={{ monthHeaderFormat: \"YYYY-MM\" }}\r\n        />\r\n      </div>\r\n      {(showModal || showEvent) && (\r\n        <div className=\"modal\">\r\n          <Modal\r\n            setShowModal={setShowModal}\r\n            eventList={eventList}\r\n            showEvent={showEvent}\r\n            setShowEvent={setShowEvent}\r\n            event={event}\r\n            setEvent={setEvent}\r\n          />\r\n        </div>\r\n      )}\r\n      <button\r\n        className=\"button-default\"\r\n        onClick={() => {\r\n          setEvent({});\r\n          setShowModal(!showModal);\r\n        }}\r\n      >\r\n        addTime\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Sample;\r\n","C:\\git\\schedule\\src\\Modal.tsx",["32","33"],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":32,"column":6,"nodeType":"40","endLine":32,"endColumn":8,"suggestions":"41"},{"ruleId":"42","severity":1,"message":"43","line":1,"column":17,"nodeType":"44","messageId":"45","endLine":1,"endColumn":26},{"ruleId":"42","severity":1,"message":"46","line":9,"column":8,"nodeType":"44","messageId":"45","endLine":9,"endColumn":13},{"ruleId":"42","severity":1,"message":"47","line":85,"column":10,"nodeType":"44","messageId":"45","endLine":85,"endColumn":14},{"ruleId":"42","severity":1,"message":"48","line":85,"column":16,"nodeType":"44","messageId":"45","endLine":85,"endColumn":23},{"ruleId":"42","severity":1,"message":"43","line":1,"column":17,"nodeType":"44","messageId":"45","endLine":1,"endColumn":26},{"ruleId":"42","severity":1,"message":"49","line":52,"column":18,"nodeType":"44","messageId":"45","endLine":52,"endColumn":27},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'eventList'. Either include it or remove the dependency array.","ArrayExpression",["52"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","'setAllDay' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"53","fix":"54"},"Update the dependencies array to be: [eventList]",{"range":"55","text":"56"},[835,837],"[eventList]"]